from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from app.bot_handlers.google_connect import show_google_menu
from app.db.session import get_session
from app.bot_handlers.settings import router as settings_router

router = Router()
router.include_router(settings_router)


main_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="show_tasks")],
        [InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")],
        [InlineKeyboardButton(text="–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥", callback_data="voice_input")],
        [InlineKeyboardButton(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings_menu")],
    ]
)

tasks_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")],
    ]
)

create_task_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")],
    ]
)

voice_input_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")],
    ]
)


@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(
        "‚ÑπÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"
        "/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/newtask ‚Äî —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É\n"
        "/tasks ‚Äî —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n"
        "/remind ‚Äî –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n"
        "/calendar ‚Äî —Å–æ–±—ã—Ç–∏—è Google Calendar\n"
        "/google ‚Äî –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Google Calendar\n"
        "\n–ú–æ–∂–µ—à—å —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á!"
    )

@router.callback_query(lambda c: c.data == "main_menu")
async def show_main_menu(callback):
    await callback.message.edit_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç.\n\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )

@router.callback_query(lambda c: c.data == "google_settings")
async def show_google_menu_callback(callback, state: FSMContext):
    await show_google_menu(callback.message, callback.from_user.id, state)

@router.callback_query(lambda c: c.data == "show_tasks")
async def show_tasks_menu(callback):
    await callback.message.edit_text(
        "–í–∞—à–∏ –∑–∞–¥–∞—á–∏:",
        reply_markup=tasks_menu
    )

@router.callback_query(lambda c: c.data == "create_task")
async def show_create_task_menu(callback):
    guide = (
        "üìã <b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É:</b>\n"
        "\n"
        "1. <b>–ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ</b> ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∑–∞–¥–∞—á–∞ –ø–æ–ø–∞–¥—ë—Ç –≤ –ò–Ω–±–æ–∫—Å.\n"
        "   <i>–ü—Ä–∏–º–µ—Ä:</i> –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ\n"
        "\n"
        "2. <b>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</b> ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –¥–∞—Ç—É/–≤—Ä–µ–º—è, –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.\n"
        "   <i>–ü—Ä–∏–º–µ—Ä—ã:</i> –ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤—Ä–∞—á—É –∑–∞–≤—Ç—Ä–∞ 10:00\n"
        "   –°–¥–∞—Ç—å –æ—Ç—á—ë—Ç 21.04 18:00\n"
        "\n"
        "3. <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</b> ‚Äî –¥–æ–±–∞–≤—å—Ç–µ !15–º, !1—á, !1–¥ –≤ –∫–æ–Ω—Ü–µ.\n"
        "   <i>–ü—Ä–∏–º–µ—Ä:</i> –í—Å—Ç—Ä–µ—á–∞ 21.04 15:00 !30–º\n"
        "\n"
        "4. <b>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</b> ‚Äî —É–∫–∞–∂–∏—Ç–µ 1—á, 30–º –∏ —Ç.–¥.\n"
        "   <i>–ü—Ä–∏–º–µ—Ä:</i> –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 19:00 1—á\n"
        "\n"
        "5. <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –∏ –¥–∞—Ç—ã:</b> –ø–Ω, –≤—Ç, —Å—Ä, —á—Ç, –ø—Ç, —Å–±, –≤—Å, —Å–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞, –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞, mon, tue –∏ —Ç.–¥.\n"
        "\n"
        "6. <b>Google Calendar</b> ‚Äî –µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á—ë–Ω, –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å.\n"
        "\n"
        "<b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n"
        "- –ö—É–ø–∏—Ç—å —Ö–ª–µ–±\n"
        "- –í—Å—Ç—Ä–µ—á–∞ —Å –ü–µ—Ç–µ–π –∑–∞–≤—Ç—Ä–∞ 14:00 !1—á\n"
        "- –ü–æ–∑–≤–æ–Ω–∏—Ç—å –º–∞–º–µ 21.04 20:00\n"
        "- –°–¥–µ–ª–∞—Ç—å –¥–æ–º–∞—à–∫—É 19:00 2—á !30–º\n"
        "\n"
        "<b>–°–æ–≤–µ—Ç:</b> –î–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–¥–∞—á–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç. –î–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –¥–æ–±–∞–≤—å—Ç–µ –¥–∞—Ç—É/–≤—Ä–µ–º—è. –î–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ‚Äî –¥–æ–±–∞–≤—å—Ç–µ ! –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª."
    )
    await callback.message.edit_text(
        guide,
        parse_mode="HTML",
        reply_markup=create_task_menu
    )

@router.callback_query(lambda c: c.data == "voice_input")
async def show_voice_input_menu(callback):
    await callback.message.edit_text(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
        reply_markup=voice_input_menu
    )
